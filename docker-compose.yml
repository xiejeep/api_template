version: '3.8'

services:
  # PostgreSQL数据库服务
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Web应用服务
  web:
    build: .
    restart: always
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --no-input &&
               gunicorn backend.wsgi:application --bind 0.0.0.0:8000"

  # Nginx服务 (可选)
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - web

volumes:
  postgres_data:
  static_volume:
  media_volume: 